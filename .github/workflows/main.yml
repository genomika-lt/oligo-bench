name: Build and Release

on:
  push:

permissions:
  contents: read
  issues: write
  pull-requests: write
  actions: read

jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Formatting
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true
          VALIDATE_PYTHON_PYLINT: true

  Linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Lint workflow
        uses: ezherman/snakemake-github-action@snakemake-8.20.5
        with:
          directory: .test
          snakefile: workflow/Snakefile
          args: "--configfile .test/config/config.yaml --lint"

  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          pip install --upgrade pip  # Upgrade pip to the latest version
          pip install nuitka PyQt6  # Install Nuitka and PyQt6
      - name: Build with Nuitka
        run: |
          python -m nuitka --standalone --onefile --output-dir=dist --enable-plugin=pyqt6 config/config_gui.py
          chmod +x dist/config_gui.bin
          mv dist/config_gui.bin ./  # Move the compiled file to the root directory
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./config_gui.bin
          asset_name: config_gui.bin
          asset_content_type: application/octet-stream
