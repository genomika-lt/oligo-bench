name: Tests

on:
  push:

permissions:
  contents: write

jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Formatting
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true
          VALIDATE_PYTHON_PYLINT: true

  Linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v4

      - name: Lint workflow
        uses: ezherman/snakemake-github-action@snakemake-8.20.5
        with:
          directory: test
          snakefile: workflow/Snakefile
          args: "--configfile test/config/config.yaml --lint"

  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install nuitka PyQt6

      - name: Build executable with Nuitka
        run: |
          python -m nuitka --standalone --onefile --static-libpython=yes --output-dir=dist --enable-plugin=pyqt6 config/config_gui.py
          chmod +x dist/config_gui.bin

      - name: Generate Changelog
        id: generate_changelog
        run: |
          git fetch --tags --prune
          git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:'* %s' > CHANGELOG.md
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release and Upload Executable
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}-${{ github.run_number }}
          name: "Release ${{ github.ref_name }}-${{ github.run_number }}"
          body: |
            Automated release for version ${{ github.ref_name }}-${{ github.run_number }}.
            Changes in this release include:
            ${{ steps.generate_changelog.outputs.changelog }}
          draft: false
          prerelease: false
          files: dist/config_gui.bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
